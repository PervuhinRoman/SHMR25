import '../../domain/models/category/category.dart';
import '../services/api_service.dart';
import 'category_repo.dart';

class CategoryRepoImpl implements CategoryRepository {
  final ApiService _apiService;
  
  CategoryRepoImpl([ApiService? apiService]) : _apiService = apiService ?? ApiService();
  
  final List<Category> _categories = [
    Category(
      id: 1,
      name: '–ó–∞—Ä–ø–ª–∞—Ç–∞',
      emoji: 'üí∏',
      isIncome: true,
    ),
    Category(
      id: 2,
      name: '–ü—Ä–æ–¥—É–∫—Ç—ã',
      emoji: 'ü•©',
      isIncome: false,
    ),
    Category(
      id: 3,
      name: '–ü–æ–¥—Ä–∞–±–æ—Ç–∫–∞',
      emoji: 'üí°',
      isIncome: true,
    ),
    Category(
      id: 4,
      name: '–¢—Ä–∞–Ω—Å–ø–æ—Ä—Ç',
      emoji: 'üöå',
      isIncome: false,
    ),
  ];

  @override
  Future<List<Category>> getAllCategories() async {
    try {
      return await _apiService.getCategories();
    } catch (e) {
      // Fallback –∫ –ª–æ–∫–∞–ª—å–Ω—ã–º –¥–∞–Ω–Ω—ã–º –≤ —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏
      await Future.delayed(const Duration(milliseconds: 500));
      return _categories;
    }
  }

  @override
  Future<List<Category>> getCategoriesByType(bool isIncome) async {
    try {
      return await _apiService.getCategoriesByType(isIncome);
    } catch (e) {
      // Fallback –∫ –ª–æ–∫–∞–ª—å–Ω—ã–º –¥–∞–Ω–Ω—ã–º –≤ —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏
      await Future.delayed(const Duration(milliseconds: 500));
      return _categories.where((category) => category.isIncome == isIncome).toList();
    }
  }
}