import 'package:flutter_bloc/flutter_bloc.dart';
import 'package:shmr_finance/data/services/preferences_service.dart';
import 'package:shmr_finance/domain/models/currency/currency.dart';

part 'currency_state.dart';

class CurrencyCubit extends Cubit<CurrencyState> {
  CurrencyCubit() : super(CurrencyState(selectedCurrency: Currencies.available.first, isLoading: true)) {
    _loadSelectedCurrency();
  }

  Future<void> _loadSelectedCurrency() async {
    try {
      print('üì± –ó–∞–≥—Ä—É–∂–∞—é –≤–∞–ª—é—Ç—É –∏–∑ SharedPreferences...');
      final currencyCode = await PreferencesService.getSelectedCurrency();
      print('üì± –ü–æ–ª—É—á–µ–Ω –∫–æ–¥ –≤–∞–ª—é—Ç—ã: $currencyCode');
      final currency = Currencies.getByCode(currencyCode) ?? Currencies.available.first;
      print('üì± –ù–∞–π–¥–µ–Ω–∞ –≤–∞–ª—é—Ç–∞: ${currency.code}');
      emit(state.copyWith(selectedCurrency: currency, isLoading: false));
      print('üì° –°–æ—Å—Ç–æ—è–Ω–∏–µ –æ–±–Ω–æ–≤–ª–µ–Ω–æ –ø–æ—Å–ª–µ –∑–∞–≥—Ä—É–∑–∫–∏: ${state.selectedCurrency.code}');
    } catch (e) {
      print('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –≤–∞–ª—é—Ç—ã: $e');
      emit(state.copyWith(isLoading: false));
    }
  }

  Future<void> setCurrency(Currency currency) async {
    print('üîÑ setCurrency –≤—ã–∑–≤–∞–Ω: ${currency.code} (${currency.symbol})');
    await PreferencesService.setSelectedCurrency(currency.code, currency.symbol);
    print('üíæ –í–∞–ª—é—Ç–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞ –≤ SharedPreferences: ${currency.code} (${currency.symbol})');
    emit(state.copyWith(selectedCurrency: currency));
    print('üì° –°–æ—Å—Ç–æ—è–Ω–∏–µ –æ–±–Ω–æ–≤–ª–µ–Ω–æ: ${state.selectedCurrency.code} (${state.selectedCurrency.symbol})');
  }

  Future<void> setCurrencyByCode(String currencyCode) async {
    final currency = Currencies.getByCode(currencyCode);
    if (currency != null) {
      await setCurrency(currency);
    }
  }
} 