import 'package:flutter/material.dart';
import 'package:flutter_bloc/flutter_bloc.dart';
import 'package:intl/intl.dart';
import 'package:shmr_finance/app_theme.dart';
import 'package:shmr_finance/domain/cubit/currency_cubit.dart';
import 'package:shmr_finance/domain/models/account/account.dart';
import 'package:shmr_finance/presentation/widgets/animated_balance_tile.dart';
import 'package:shmr_finance/presentation/widgets/custom_appbar.dart';

class AccountDeletePage extends StatelessWidget {
  final AccountResponse account;

  const AccountDeletePage({
    super.key,
    required this.account,
  });

  @override
  Widget build(BuildContext context) {
    final balance = double.tryParse(account.balance) ?? 0.0;
    
    return Scaffold(
      appBar: CustomAppBar(
        title: "–£–¥–∞–ª–µ–Ω–∏–µ —Å—á–µ—Ç–∞",
        actions: <Widget>[
          IconButton(
            icon: const Icon(Icons.check),
            onPressed: () {
              Navigator.of(context).pop();
            },
          ),
          IconButton(
            icon: const Icon(Icons.highlight_remove_outlined),
            onPressed: () {
              Navigator.of(context).pop();
            },
          ),
        ],
      ),
      body: BlocBuilder<CurrencyCubit, CurrencyState>(
        builder: (context, currencyState) {
          return Column(
            crossAxisAlignment: CrossAxisAlignment.stretch,
            children: [
              // –ë–ª–æ–∫ —Å—á–µ—Ç–∞ —Å –∞–Ω–∏–º–∞—Ü–∏–µ–π –±–ª—é—Ä–∞
              AnimatedBalanceTile(
                icon: 'üí∞',
                title: '–ë–∞–ª–∞–Ω—Å',
                value: "${NumberFormat("0.00").format(balance)} ${currencyState.selectedCurrency.symbol}",
              ),
              const Divider(
                height: 1,
                thickness: 1,
                color: CustomAppTheme.figmaBgGrayColor,
              ),

              const SizedBox(height: 32),

              // –ö–Ω–æ–ø–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è
              Padding(
                padding: const EdgeInsets.all(16.0),
                child: ElevatedButton(
                  onPressed: () => _showDeleteConfirmation(context),
                  style: ElevatedButton.styleFrom(
                    backgroundColor: CustomAppTheme.figmaRedColor,
                    foregroundColor: Colors.white,
                    padding: const EdgeInsets.symmetric(vertical: 16),
                    shape: RoundedRectangleBorder(
                      borderRadius: BorderRadius.circular(8),
                    ),
                  ),
                  child: const Text(
                    '–£–¥–∞–ª–∏—Ç—å —Å—á–µ—Ç',
                    style: TextStyle(
                      fontSize: 16,
                      fontWeight: FontWeight.w600,
                    ),
                  ),
                ),
              ),
            ],
          );
        },
      ),
    );
  }

  void _showDeleteConfirmation(BuildContext context) {
    showDialog(
      context: context,
      builder: (BuildContext context) {
        return AlertDialog(
          title: const Text('–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ —É–¥–∞–ª–µ–Ω–∏—è'),
          content: Text(
            '–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å —Å—á–µ—Ç "${account.name}"? –≠—Ç–æ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–µ–ª—å–∑—è –æ—Ç–º–µ–Ω–∏—Ç—å.',
          ),
          actions: [
            TextButton(
              onPressed: () => Navigator.of(context).pop(),
              child: const Text('–û—Ç–º–µ–Ω–∞'),
            ),
            TextButton(
              onPressed: () {
                Navigator.of(context).pop();
                _deleteAccount(context);
              },
              style: TextButton.styleFrom(
                foregroundColor: CustomAppTheme.figmaRedColor,
              ),
              child: const Text('–£–¥–∞–ª–∏—Ç—å'),
            ),
          ],
        );
      },
    );
  }

  void _deleteAccount(BuildContext context) {
    // TODO: –†–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å —É–¥–∞–ª–µ–Ω–∏–µ —Å—á–µ—Ç–∞ —á–µ—Ä–µ–∑ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π
    print('–£–¥–∞–ª–µ–Ω–∏–µ —Å—á–µ—Ç–∞ ${account.id}');
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—à–Ω–æ–º —É–¥–∞–ª–µ–Ω–∏–∏
    ScaffoldMessenger.of(context).showSnackBar(
      SnackBar(
        content: Text('–°—á–µ—Ç "${account.name}" —É–¥–∞–ª–µ–Ω'),
        backgroundColor: Colors.green,
      ),
    );
    
    // –í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –Ω–∞ –ø—Ä–µ–¥—ã–¥—É—â–∏–π —ç–∫—Ä–∞–Ω
    Navigator.of(context).pop();
  }
} 